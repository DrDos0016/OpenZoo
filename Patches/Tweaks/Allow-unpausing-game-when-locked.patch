Name: Allow unpausing game when locked
Author: Adrian Siekierka <kontakt@asie.pl>
Conditional: movementUnpausesGame true (Breaking) Move attempt unpauses game

If enabled, pressing "P" when paused unpauses the game.

In addition, if the "Move attempt unpauses game" sub-option is selected,
attempting to move when paused unpauses the game. This behaviour change can,
however, break certain games.

--- src.orig/SRC/GAME.PAS	2020-03-16 14:53:28.665824692 +0100
+++ src/SRC/GAME.PAS	2020-03-20 18:31:06.406379086 +0100
@@ -1417,6 +1417,7 @@ procedure GamePlayLoop(boardChanged: boo
 	var
 		exitLoop: boolean;
 		pauseBlink: boolean;
+		unpauseGame: boolean;
 	procedure GameDrawSidebar;
 		begin
 			SidebarClear;
@@ -1535,7 +1536,13 @@ procedure GamePlayLoop(boardChanged: boo
 				if InputKeyPressed = KEY_ESCAPE then
 					GamePromptEndPlay;
 
+				unpauseGame := false;
+				if UpCase(InputKeyPressed) = 'P' then
+					unpauseGame := true;
 				if (InputDeltaX <> 0) or (InputDeltaY <> 0) then begin
+{$IFDEF movementUnpausesGame}
+					unpauseGame := true;
+{$ENDIF}
 					ElementDefs[Board.Tiles[Board.Stats[0].X + InputDeltaX][Board.Stats[0].Y + InputDeltaY].Element].TouchProc(
 						Board.Stats[0].X + InputDeltaX, Board.Stats[0].Y + InputDeltaY, 0, InputDeltaX, InputDeltaY);
 				end;
@@ -1556,9 +1563,14 @@ procedure GamePlayLoop(boardChanged: boo
 						DrawPlayerSurroundings(Board.Stats[0].X, Board.Stats[0].Y, 0);
 						DrawPlayerSurroundings(Board.Stats[0].X - InputDeltaX, Board.Stats[0].Y - InputDeltaY, 0);
 					end;
+					unpauseGame := true;
+				end;
 
+				if unpauseGame then begin
 					{ Unpause }
 					GamePaused := false;
+					{ The player might be invisible if he hasn't moved in the above code }
+					BoardDrawTile(Board.Stats[0].X, Board.Stats[0].Y);
 					SidebarClearLine(5);
 					CurrentTick := Random(100);
 					CurrentStatTicked := Board.StatCount + 1;
